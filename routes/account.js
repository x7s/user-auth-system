import express from 'express';
import { isAuthenticated } from '../middlewares/auth.js';
import { logRouteAccess } from '../middlewares/loggerMiddleware.js';
import {
  getAccountSettings,
  updateAccountInfo,
  changePassword,
  updateProfile,
  changeEmail,
  sendEmailVerification,
  deleteAccount,
} from '../controllers/accountController.js';
import User from '../models/User.js';

const router = express.Router();

// üîÑ API: –í—Ä—ä—â–∞ –¥–∞–Ω–Ω–∏ –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (JSON)
router.get('/', isAuthenticated, logRouteAccess('API: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞'), getAccountSettings);

// ‚úèÔ∏è –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –∏–º–µ –∏ –∏–º–µ–π–ª (–æ—Å–Ω–æ–≤–Ω–∞ —Ñ–æ—Ä–º–∞)
router.post('/update', isAuthenticated, logRouteAccess('–û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –∏–º–µ/–∏–º–µ–π–ª'), updateAccountInfo);

// üîí –°–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞
router.post('/change-password', isAuthenticated, logRouteAccess('–°–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞'), changePassword);

// üë§ –ü—ä–ª–Ω–æ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª ‚Äì –∏–º–µ, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ, email
router.post('/update-profile', isAuthenticated, logRouteAccess('–ü—ä–ª–Ω–æ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª'), updateProfile);

// üëÅÔ∏è –í–∏–∑—É–∞–ª–µ–Ω –∏–∑–≥–ª–µ–¥ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (EJS)
router.get('/settings', isAuthenticated, logRouteAccess('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞'), async (req, res) => {
  const user = await User.findById(req.user._id).select('-password');
  res.render('account', {
    title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞',
    user
  });
});

// üìß –°–º—è–Ω–∞ –Ω–∞ –∏–º–µ–π–ª
router.post('/change-email', isAuthenticated, logRouteAccess('–°–º—è–Ω–∞ –Ω–∞ –∏–º–µ–π–ª'), changeEmail);

// üì® –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç–≤—ä—Ä–¥–∏—Ç–µ–ª–µ–Ω email
router.post('/send-verification', isAuthenticated, logRouteAccess('–ò–∑–ø—Ä–∞—Ç–µ–Ω –ø–æ—Ç–≤—ä—Ä–¥–∏—Ç–µ–ª–µ–Ω –∏–º–µ–π–ª'), sendEmailVerification);

// ‚ùå –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∞–∫–∞—É–Ω—Ç
router.delete('/delete', isAuthenticated, logRouteAccess('–ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∞–∫–∞—É–Ω—Ç'), deleteAccount);

export default router;